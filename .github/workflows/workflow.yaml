# Nombre del workflow (aparecerá en la GUI)
name: Workflou actions
# Cuándo se ejecuta: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on: 
  pull_request:
    branches:    
      - main
# Listado de jobs
jobs:
  # ID del job. Cada job se ejecuta en una máquina nueva
  Accioneando:
    # Tipo de máquina. Puede ser de Github o un self-hosted runner:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest
    steps:
    - name: Descargamos código
      uses: actions/checkout@v3

    - name: Instalamos Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.13.1'

    - name: Test unitarios
      run: go test ./...

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::268229342313:oidc-provider/token.actions.githubusercontent.com
        role-session-name: PabloRuizSession
        aws-region: "eu-west-1"

<<<<<<< HEAD
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: 1.0
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    
=======
    - name: Mostramos nombre de la imagen de Docker
      run: echo ${{ github.event.repository.name }}:latest .
>>>>>>> 8d897be33adb671813837a866fe721f40827be67
